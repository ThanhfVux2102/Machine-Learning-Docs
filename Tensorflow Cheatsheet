# üéØ TensorFlow Dataset Pipeline ‚Äì Tham s·ªë & C√°ch ch·ªçn (Cheatsheet)

## 1. `.map(function, num_parallel_calls=...)`

| Tham s·ªë              | Khi n√†o c·∫ßn ch·ªânh                              | C√°ch ch·ªçn                                                                 |
|----------------------|------------------------------------------------|---------------------------------------------------------------------------|
| `function`           | **B·∫Øt bu·ªôc**                                   | H√†m x·ª≠ l√Ω t·ª´ng ph·∫ßn t·ª≠ (normalize, augment, tokenize, scale...)          |
| `num_parallel_calls` | Khi dataset l·ªõn ho·∫∑c x·ª≠ l√Ω n·∫∑ng trong `map()`  | D√πng `tf.data.AUTOTUNE` ƒë·ªÉ t·ªëi ∆∞u hi·ªáu su·∫•t                              |

> üí° Tip: Lu√¥n d√πng `num_parallel_calls=tf.data.AUTOTUNE` khi x·ª≠ l√Ω ·∫£nh, text ho·∫∑c augment nhi·ªÅu.

---

## 2. `.shuffle(buffer_size, seed=None, reshuffle_each_iteration=True)`

| Tham s·ªë                    | Khi n√†o c·∫ßn ch·ªânh                                           | C√°ch ch·ªçn                                                                 |
|----------------------------|-------------------------------------------------------------|---------------------------------------------------------------------------|
| `buffer_size`              | R·∫•t quan tr·ªçng ƒë·ªÉ tr√°nh overfitting                        | - B·∫±ng s·ªë m·∫´u (VD: `ds_info.splits['train'].num_examples`)                |
| `seed`                     | Mu·ªën k·∫øt qu·∫£ reproducible                                  | Ch·ªçn s·ªë c·ª• th·ªÉ nh∆∞ `seed=42`                                              |
| `reshuffle_each_iteration`| N·∫øu mu·ªën d·ªØ li·ªáu shuffle l·∫°i m·ªói epoch                     | M·∫∑c ƒë·ªãnh l√† `True`, ch·ªâ t·∫Øt khi debug                                     |

> ‚ö†Ô∏è Shuffle qu√° y·∫øu ‚Üí model h·ªçc theo th·ª© t·ª± v√† overfit.

---

## 3. `.batch(batch_size, drop_remainder=False)`

| Tham s·ªë          | Khi n√†o c·∫ßn ch·ªânh                                     | C√°ch ch·ªçn                                               |
|------------------|-------------------------------------------------------|---------------------------------------------------------|
| `batch_size`     | Lu√¥n c·∫ßn ch·ªâ ƒë·ªãnh                                     | - GPU y·∫øu: 16‚Äì32 <br> - GPU m·∫°nh: 64‚Äì128+               |
| `drop_remainder` | Mu·ªën c√°c batch c√≥ shape ƒë·ªìng nh·∫•t                     | `True` n·∫øu d√πng RNN/LSTM ho·∫∑c TPU y√™u c·∫ßu fixed shape   |

> ‚úÖ N·∫øu d√πng m√¥ h√¨nh y√™u c·∫ßu input c·ªë ƒë·ªãnh ‚Üí n√™n d√πng `drop_remainder=True`.

---

## 4. `.prefetch(buffer_size)`

| Tham s·ªë          | Khi n√†o c·∫ßn ch·ªânh                   | C√°ch ch·ªçn                          |
|------------------|-------------------------------------|------------------------------------|
| `buffer_size`    | Mu·ªën tƒÉng t·ªëc ƒë·ªô training           | D√πng `tf.data.AUTOTUNE`            |

> üí° N√™n lu√¥n c√≥ `.prefetch(tf.data.AUTOTUNE)` ·ªü cu·ªëi pipeline.

---

## 5. `.repeat(count=None)`

| Tham s·ªë     | Khi n√†o c·∫ßn ch·ªânh                         | C√°ch ch·ªçn                           |
|-------------|-------------------------------------------|-------------------------------------|
| `count`     | Khi b·∫°n mu·ªën dataset t·ª± l·∫∑p l·∫°i nhi·ªÅu l·∫ßn | N·∫øu d√πng trong `.fit(epochs=...)`, ƒë·ªÉ m·∫∑c ƒë·ªãnh l√† v√¥ h·∫°n (`None`) |

---

## üß† Nguy√™n t·∫Øc t∆∞ duy ch·ªçn tham s·ªë:

| C√¢u h·ªèi                        | G·ª£i √Ω h√†nh ƒë·ªông                                       |
|-------------------------------|--------------------------------------------------------|
| Dataset l·ªõn hay nh·ªè?          | Dataset l·ªõn ‚Üí d√πng `shuffle(buffer_size l·ªõn)`         |
| GPU c√≥ ch·∫≠m kh√¥ng?            | D√πng `prefetch(tf.data.AUTOTUNE)`                     |
| C√≥ c·∫ßn x·ª≠ l√Ω song song?       | D√πng `map(..., num_parallel_calls=tf.data.AUTOTUNE)`  |
| M√¥ h√¨nh c·∫ßn shape c·ªë ƒë·ªãnh?    | D√πng `drop_remainder=True` trong `.batch()`           |

---

## üîÅ C·∫•u tr√∫c pipeline ti√™u chu·∫©n:

```python
ds_train = ds_train.map(preprocess_fn, num_parallel_calls=tf.data.AUTOTUNE)
ds_train = ds_train.shuffle(buffer_size=10000, seed=42)
ds_train = ds_train.batch(32, drop_remainder=True)
ds_train = ds_train.prefetch(tf.data.AUTOTUNE)
